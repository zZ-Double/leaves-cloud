<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leaves.system.mapper.SysUserMapper">

    <resultMap id="BaseResultMap" type="com.leaves.system.model.entity.SysUser">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="emailFlag" column="email_flag" jdbcType="TINYINT"/>
        <result property="phoneFlag" column="phone_flag" jdbcType="TINYINT"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="deptId" column="dept_id" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="delFlag" column="del_flag" jdbcType="TINYINT"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateUser" column="update_user" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="dataScope" column="data_scope" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,username,password,
        nick_name,user_type,email,
        phone_number,description,email_flag,
        phone_flag,sex,avatar,
        salt,login_ip,login_date,
        last_login_time,status,del_flag,
        create_user,create_time,update_user,
        update_time,remark,dept_id,data_scope
    </sql>


    <select id="userPage" resultType="com.leaves.system.model.vo.UserVO">
        SELECT u.id,
               u.username,
               u.nick_name,
               u.user_type,
               u.phone_number,
               u.sex,
               u.avatar,
               u.status,
               u.create_time,
               u.dept_id,
               d.dept_name as dept_name,
               GROUP_CONCAT( r.role_name ) AS role_names
        FROM sys_user u
            LEFT JOIN sys_dept d ON u.dept_id = d.id
            LEFT JOIN sys_user_role ur ON u.id = ur.user_id
            LEFT JOIN sys_role r ON ur.role_id = r.id
        <where>
            u.del_flag = 1 AND r.role_code != 'ROOT'
            <if test="param.keywords != null and param.keywords != ''">
                AND (u.username LIKE CONCAT('%', #{param.keywords}, '%')
                OR u.nick_name LIKE CONCAT('%', #{param.keywords}, '%')
                OR u.phone_number LIKE CONCAT('%', #{param.keywords}, '%')
                )
            </if>
            <if test="param.status != null">
                AND u.status = #{param.status}
            </if>
            <if test="param.deptId!=null and param.deptId != ''">
                AND concat(',',concat(d.ancestors,',',d.id),',') like concat('%,',#{param.deptId},',%')
            </if>
        </where>
        GROUP BY u.id
    </select>

    <select id="userProfile" resultType="com.leaves.system.model.vo.UserVO">
        select u.nick_name,
               u.avatar,
               u.sex,
               u.phone_number,
               u.email,
               u.create_time,
               group_concat(DISTINCT d.dept_name) as deptName,
               group_concat(DISTINCT r.role_name) as roleNames
        from leaves_system.sys_user u
                 left join leaves_system.sys_dept d on u.dept_id = d.id
                 left join leaves_system.sys_user_role ur on u.id = ur.user_id
                 left join leaves_system.sys_role r on r.id = ur.role_id
        where u.id = #{userId}
        group by u.username
    </select>
</mapper>
